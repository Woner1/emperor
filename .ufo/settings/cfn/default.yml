---
# Options allow you to customize any resources that ufo creates with
# CloudFormation. These options are inserting into the generated template.
# More info: https://ufoships.com/docs/customize-cloudformation

Elb:
  Scheme: internet-facing

# https://docs.aws.amazon.com/fr_fr/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html
#
# When using SSL with network elb, the target group protocol is usually http still
# unless you also handle SSL termination at the app level.
TargetGroup:
  Port: 80 # only used with ECS if awsvpc mode
  # Protocol: TCP # valid values - application elb: HTTP HTTPS, network elb: TCP
                  # ufo sets defaults in cloudformation template
                  #   application elb: HTTP
                  #   network elb: TCP
                  # so we can keep this commented out, unless we need HTTPS at the app level
  # Health check settings are supported by application load balancer only:
  # HealthCheckPath: /up # health check
  HealthCheckIntervalSeconds: 10 # default: 30. Network ELB can only take 10 or 30
  HealthyThresholdCount: 2
  UnhealthyThresholdCount: 2 # default: 10
  # HealthCheckProtocol: HTTP # HTTP or HTTPS
  # HealthCheckPort: traffic-port
  TargetGroupAttributes:
  - Key: deregistration_delay.timeout_seconds
    Value: 10

# https://docs.aws.amazon.com/fr_fr/elasticloadbalancing/latest/APIReference/API_CreateListener.html
#
# This is the default listener and normally should listen to port 80.
Listener:
  Port: 80
  # For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocol is TCP.
  # Protocol: TCP # valid values - application elb: HTTP HTTPS, network elb: TCP, TLS
                  # ufo sets these defaults:
                  #   application elb: HTTP  # unless port is 443
                  #   application elb: HTTPS # if port is 443
                  #   network elb: TCP  # unless port is 443
                  #   network elb: TLS  # if port is 443
                  # Can keep protocol commented out,
                  # unless need to override the defaults.
  # If using the listener to handle SSL
  # Certificates:
  # - CertificateArn: arn:aws:acm:us-east-1:111111111111:certificate/11111111-2222-3333-4444-555555555555

# An optional second listener can be created.
# If HTTPS and SSL is required then the listener_ssl config is what you should use.
#   Application ELBs support SSL termination.
#   Network load balancers do not and must pass the request through to the app
#   to handle SSL termination.
#
# ufo creates an ssl listener when listener_ssl is set.
# ListenerSsl:
#   Port: 443
#   # Certificates:
#   # - CertificateArn: arn:aws:acm:us-east-1:111111111111:certificate/11111111-2222-3333-4444-555555555555
#   # Protocol: TCP # valid values - application elb: HTTP HTTPS, network elb: TCP, TLS
#                   # ufo handles setting the defaults:
#                   #   application elb: HTTPS
#                   #   network elb: TLS

# Configure dns to automatically be associated with the ELB dns name.
# Note, the route53 record set for the domain name must already exist.
# The {stack_name} variable gets replaced with the name of the CloudFormation stack name.
# Example: {stack_name} => demo-web
# Dns:
#   Name: "{stack_name}.yourdomain."
#   HostedZoneName: yourdomain. # dont forget the trailing period
#   TTL: '60' # ttl has special upcase casing
